---
---
{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.9.2",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@statechannels/client-api-schema!",
  "docComment": "/**\n * Defines and validates the data types communicated between an app and a wallet\n *\n * @remarks\n *\n * Also exposes functions that can validate messages (Requests, Responses, Notifications and Error Responses), as well as to cast them as the correct Type.\n *\n * Example request:\n * ```json\n * {\n *   \"jsonrpc\": \"2.0\",\n *   \"method\": \"PushMessage\",\n *   \"id\": 1,\n *   \"params\": {\n *     \"recipient\": \"user123\",\n *     \"sender\": \"user456\",\n *     \"data\": \"0x123..\"\n *   }\n * }\n * ```\n *\n * Example response:\n * ```json\n * {\n *   \"jsonrpc\": \"2.0\",\n *   \"id\": 1,\n *   \"result\": {\"success\": true}\n * }\n * ```\n *\n * @packageDocumentation\n */\n",
  "name": "@statechannels/client-api-schema",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@statechannels/client-api-schema!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!Address:type",
          "docComment": "/**\n * Ethereum Address  @pattern ^0x([a-fA-F0-9]{40})|0$\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Address = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Address",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!Allocation:interface",
          "docComment": "/**\n * Array of destination-amount pairings for a given token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Allocation "
            }
          ],
          "releaseTag": "Public",
          "name": "Allocation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Allocation#allocationItems:member",
              "docComment": "/**\n * Array of destination-amount pairings\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allocationItems: "
                },
                {
                  "kind": "Reference",
                  "text": "AllocationItem",
                  "canonicalReference": "@statechannels/client-api-schema!AllocationItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allocationItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Allocation#token:member",
              "docComment": "/**\n * The token contract address\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!AllocationItem:interface",
          "docComment": "/**\n * Assigns some amount of an unspecified asset to a destination\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AllocationItem "
            }
          ],
          "releaseTag": "Public",
          "name": "AllocationItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!AllocationItem#amount:member",
              "docComment": "/**\n * How much funds will be transferred to the destination address.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!AllocationItem#destination:member",
              "docComment": "/**\n * Address of EOA to receive channel proceeds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destination: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "destination",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!Allocations:type",
          "docComment": "/**\n * Included for backwards compatibility\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Allocations = "
            },
            {
              "kind": "Reference",
              "text": "Allocation",
              "canonicalReference": "@statechannels/client-api-schema!Allocation:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Allocations",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ApproveBudgetAndFundParams "
            }
          ],
          "releaseTag": "Public",
          "name": "ApproveBudgetAndFundParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams#hub:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hub: "
                },
                {
                  "kind": "Reference",
                  "text": "Participant",
                  "canonicalReference": "@statechannels/client-api-schema!Participant:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hub",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams#playerParticipantId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "playerParticipantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "playerParticipantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams#requestedReceiveCapacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestedReceiveCapacity: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestedReceiveCapacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams#requestedSendCapacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestedSendCapacity: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestedSendCapacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ApproveBudgetAndFundRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'ApproveBudgetAndFund', "
            },
            {
              "kind": "Reference",
              "text": "ApproveBudgetAndFundParams",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ApproveBudgetAndFundRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ApproveBudgetAndFundResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DomainBudget",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ApproveBudgetAndFundResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!BudgetUpdatedNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BudgetUpdatedNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'BudgetUpdated', "
            },
            {
              "kind": "Reference",
              "text": "DomainBudget",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BudgetUpdatedNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!Bytes32:type",
          "docComment": "/**\n * Bytes32  @pattern ^0x([a-fA-F0-9]{64})$\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Bytes32 = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Bytes32",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChallengeChannelError = "
            },
            {
              "kind": "Reference",
              "text": "ChannelNotFound",
              "canonicalReference": "@statechannels/client-api-schema!~ChannelNotFound:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChallengeChannelError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChallengeChannelParams "
            }
          ],
          "releaseTag": "Public",
          "name": "ChallengeChannelParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelParams#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChallengeChannelRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'ChallengeChannel', "
            },
            {
              "kind": "Reference",
              "text": "ChallengeChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChallengeChannelRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChallengeChannelResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChallengeChannelResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!ChannelBudget:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChannelBudget "
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelBudget",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelBudget#amount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelBudget#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "Bytes32",
                  "canonicalReference": "@statechannels/client-api-schema!Bytes32:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelClosed:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelClosed = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!~ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['ChannelClosed'], 'Channel closed'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelClosed",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelClosingNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelClosingNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'ChannelClosed', "
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelClosingNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelId:type",
          "docComment": "/**\n * Nitro ChannelId  @pattern ^0x([a-fA-F0-9]{64})$\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelId = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelNotFound:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelNotFound = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!~ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['ChannelNotFound'], 'Channel not found'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelNotFound",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelProposedNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelProposedNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'ChannelProposed', "
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelProposedNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChannelResult "
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#allocations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allocations: "
                },
                {
                  "kind": "Reference",
                  "text": "Allocation",
                  "canonicalReference": "@statechannels/client-api-schema!Allocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allocations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#appDefinition:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appDefinition: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appDefinition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#challengeExpirationTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "challengeExpirationTime?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "challengeExpirationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#participants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "participants: "
                },
                {
                  "kind": "Reference",
                  "text": "Participant",
                  "canonicalReference": "@statechannels/client-api-schema!Participant:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "participants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelStatus",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult#turnNum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "turnNum: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint48",
                  "canonicalReference": "@statechannels/client-api-schema!Uint48:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "turnNum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelStatus:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelStatus = "
            },
            {
              "kind": "Content",
              "text": "'proposed' | 'opening' | 'funding' | 'running' | 'challenging' | 'responding' | 'closing' | 'closed'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelStatus",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ChannelUpdatedNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelUpdatedNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'ChannelUpdated', "
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelUpdatedNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseAndWithdrawError = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['CloseAndWithdraw']['UserDeclined'], 'User declined'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseAndWithdrawError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CloseAndWithdrawParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CloseAndWithdrawParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawParams#hubParticipantId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hubParticipantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hubParticipantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseAndWithdrawRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'CloseAndWithdraw', "
            },
            {
              "kind": "Reference",
              "text": "CloseAndWithdrawParams",
              "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseAndWithdrawRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseAndWithdrawResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    success: boolean;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseAndWithdrawResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseChannelError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseChannelError = "
            },
            {
              "kind": "Reference",
              "text": "NotYourTurn",
              "canonicalReference": "@statechannels/client-api-schema!~NotYourTurn:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChannelNotFound",
              "canonicalReference": "@statechannels/client-api-schema!~ChannelNotFound:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseChannelError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!CloseChannelParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CloseChannelParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CloseChannelParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CloseChannelParams#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseChannelRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseChannelRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'CloseChannel', "
            },
            {
              "kind": "Reference",
              "text": "CloseChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!CloseChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseChannelRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CloseChannelResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CloseChannelResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CloseChannelResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CreateChannelError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateChannelError = "
            },
            {
              "kind": "Reference",
              "text": "SigningAddressNotFound",
              "canonicalReference": "@statechannels/client-api-schema!~SigningAddressNotFound:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InvalidAppDefinition",
              "canonicalReference": "@statechannels/client-api-schema!~InvalidAppDefinition:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UnsupportedToken",
              "canonicalReference": "@statechannels/client-api-schema!~UnsupportedToken:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CreateChannelError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CreateChannelParams "
            }
          ],
          "releaseTag": "Public",
          "name": "CreateChannelParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams#allocations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allocations: "
                },
                {
                  "kind": "Reference",
                  "text": "Allocation",
                  "canonicalReference": "@statechannels/client-api-schema!Allocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allocations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams#appDefinition:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appDefinition: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appDefinition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams#fundingStrategy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fundingStrategy: "
                },
                {
                  "kind": "Reference",
                  "text": "FundingStrategy",
                  "canonicalReference": "@statechannels/client-api-schema!FundingStrategy:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fundingStrategy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams#participants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "participants: "
                },
                {
                  "kind": "Reference",
                  "text": "Participant",
                  "canonicalReference": "@statechannels/client-api-schema!Participant:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "participants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CreateChannelRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateChannelRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'CreateChannel', "
            },
            {
              "kind": "Reference",
              "text": "CreateChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CreateChannelRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!CreateChannelResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateChannelResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CreateChannelResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!DomainBudget:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DomainBudget "
            }
          ],
          "releaseTag": "Public",
          "name": "DomainBudget",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget#budgets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "budgets: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenBudget",
                  "canonicalReference": "@statechannels/client-api-schema!TokenBudget:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "budgets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget#domain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget#hubAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hubAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hubAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!EnableEthereumError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnableEthereumError = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['EnableEthereum']['EthereumNotEnabled'], 'Ethereum Not Enabled'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EnableEthereumError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!EnableEthereumRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnableEthereumRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'EnableEthereum', {}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EnableEthereumRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!EnableEthereumResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnableEthereumResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    signingAddress: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@statechannels/client-api-schema!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    destinationAddress: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@statechannels/client-api-schema!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    walletVersion: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EnableEthereumResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ErrorCodes:type",
          "docComment": "/**\n * Error codes that might be returned by the wallet\n *\n * @remarks\n *\n * Errors conform to the [JSON-RPC 2.0 error spec](https://www.jsonrpc.org/specification#error_object). Beyond the standard errors from that spec, the following domain-specific errors are possible: <ul> <li> 100: The wallet approval was rejected by the Web3 provider.</li> <li> 200: The user declines</li> <li> 300: You cannot close the channel when it is not your turn</li> <li> 400: Channel not found</li> <li> 900: The message is not addressed to this wallet.</li> <li> 1000: The wallet can't find the signing key corresponding to the first signing address in the participants array.</li> <li> 1001: There isn't a contract deployed at the app definition address. </li> <li> 1002: The wallet doesn't support one or more of the tokens appearing in the allocation.</li> <li> 1100: The wallet can't find the channel corresponding to the channelId</li> <li> 1101: The wallet contains invalid state data</li> <li> 1200: The wallet can't find the channel corresponding to the channelId</li> <li> 1300: The wallet can't find the channel corresponding to the channelId</li> </ul>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ErrorCodes = "
            },
            {
              "kind": "Content",
              "text": "{\n    EnableEthereum: {\n        EthereumNotEnabled: 100;\n    };\n    CloseAndWithdraw: {\n        UserDeclined: 200;\n    };\n    CloseChannel: {\n        NotYourTurn: 300;\n        ChannelNotFound: 301;\n    };\n    UpdateChannel: {\n        ChannelNotFound: 400;\n        InvalidTransition: 401;\n        InvalidAppData: 402;\n        NotYourTurn: 403;\n        ChannelClosed: 404;\n    };\n    PushMessage: {\n        WrongParticipant: 900;\n    };\n    CreateChannel: {\n        SigningAddressNotFound: 1000;\n        InvalidAppDefinition: 1001;\n        UnsupportedToken: 1002;\n    };\n    JoinChannel: {\n        ChannelNotFound: 1100;\n        InvalidTransition: 1101;\n    };\n    GetState: {\n        ChannelNotFound: 1200;\n    };\n    ChallengeChannel: {\n        ChannelNotFound: 1300;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorCodes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!ExternalDestination:type",
          "docComment": "/**\n * Nitro ChannelId  @pattern ^0x(0{24})([a-fA-F0-9]{40})$\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ExternalDestination = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ExternalDestination",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!FundingStrategy:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FundingStrategy = "
            },
            {
              "kind": "Content",
              "text": "'Direct' | 'Ledger' | 'Virtual'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FundingStrategy",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!Funds:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Funds "
            }
          ],
          "releaseTag": "Public",
          "name": "Funds",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Funds#amount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Funds#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!GetBudgetParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetBudgetParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetBudgetParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!GetBudgetParams#hubParticipantId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hubParticipantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hubParticipantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetBudgetRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetBudgetRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'GetBudget', "
            },
            {
              "kind": "Reference",
              "text": "GetBudgetParams",
              "canonicalReference": "@statechannels/client-api-schema!GetBudgetParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetBudgetRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetBudgetResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetBudgetResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DomainBudget",
              "canonicalReference": "@statechannels/client-api-schema!DomainBudget:interface"
            },
            {
              "kind": "Content",
              "text": " | {}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetBudgetResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!GetChannelsParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetChannelsParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetChannelsParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!GetChannelsParams#includeClosed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeClosed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "includeClosed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetChannelsRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetChannelsRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'GetChannels', {\n    includeClosed?: boolean;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetChannelsRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetChannelsResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetChannelsResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetChannelsResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetStateError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetStateError = "
            },
            {
              "kind": "Reference",
              "text": "ChannelNotFound",
              "canonicalReference": "@statechannels/client-api-schema!~ChannelNotFound:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetStateError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!GetStateParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetStateParams "
            }
          ],
          "releaseTag": "Public",
          "name": "GetStateParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!GetStateParams#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetStateRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetStateRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'GetState', "
            },
            {
              "kind": "Reference",
              "text": "GetStateParams",
              "canonicalReference": "@statechannels/client-api-schema!GetStateParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetStateRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetStateResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetStateResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetStateResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetWalletInformationRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetWalletInformationRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'GetWalletInformation', {}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetWalletInformationRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!GetWalletInformationResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetWalletInformationResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    signingAddress: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@statechannels/client-api-schema!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    destinationAddress: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@statechannels/client-api-schema!Address:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    walletVersion: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetWalletInformationResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!InvalidAppData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InvalidAppData = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!~ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['InvalidAppData'], 'Invalid app data', {\n    appData: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InvalidAppData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!InvalidTransition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InvalidTransition = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!~ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['InvalidTransition'], 'Invalid transition', {\n    channelStatus: "
            },
            {
              "kind": "Reference",
              "text": "ChannelStatus",
              "canonicalReference": "@statechannels/client-api-schema!ChannelStatus:type"
            },
            {
              "kind": "Content",
              "text": ";\n    proposedUpdate: "
            },
            {
              "kind": "Reference",
              "text": "UpdateChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InvalidTransition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isJsonRpcErrorResponse:function(1)",
          "docComment": "/**\n * Type guard for {@link JsonRpcErrorResponse | JsonRpcErrorResponse}\n *\n * @returns true if the message is a JSON-RPC error response, false otherwise\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isJsonRpcErrorResponse<Code extends "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", Message, Data = "
            },
            {
              "kind": "Content",
              "text": "undefined"
            },
            {
              "kind": "Content",
              "text": ">(message: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcErrorResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<Code, Message, Data>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 13
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Code",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Message",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Data",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "isJsonRpcErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isJsonRpcNotification:function(1)",
          "docComment": "/**\n * Type guard for {@link JsonRpcNotification | JsonRpcNotification}\n *\n * @returns true if the message is a JSON-RPC notification, false otherwise\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isJsonRpcNotification<Name extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", Params extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ">(message: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<Name, Params>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Name",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Params",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "isJsonRpcNotification"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isJsonRpcRequest:function(1)",
          "docComment": "/**\n * Type guard for {@link JsonRpcRequest | JsonRpcRequest}\n *\n * @returns true if the message is a JSON-RPC request, false otherwise\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isJsonRpcRequest(message: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isJsonRpcRequest"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isJsonRpcResponse:function(1)",
          "docComment": "/**\n * Type guard for {@link JsonRpcResponse | JsonRpcResponse}\n *\n * @returns true if the message is a JSON-RPC response, false otherwis\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isJsonRpcResponse<ResponseType = "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ">(message: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<ResponseType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ResponseType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isJsonRpcResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isStateChannelsErrorResponse:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStateChannelsErrorResponse(message: "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsJsonRpcMessage",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsJsonRpcMessage:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsErrorResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsErrorResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isStateChannelsErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isStateChannelsNotification:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStateChannelsNotification(message: "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsJsonRpcMessage",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsJsonRpcMessage:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsNotification",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isStateChannelsNotification"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isStateChannelsRequest:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStateChannelsRequest(message: "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsJsonRpcMessage",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsJsonRpcMessage:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsRequest",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsRequest:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isStateChannelsRequest"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!isStateChannelsResponse:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStateChannelsResponse(message: "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsJsonRpcMessage",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsJsonRpcMessage:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@statechannels/client-api-schema!~message"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isStateChannelsResponse"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!JoinChannelError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JoinChannelError = "
            },
            {
              "kind": "Reference",
              "text": "ChannelNotFound",
              "canonicalReference": "@statechannels/client-api-schema!~ChannelNotFound:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InvalidTransition",
              "canonicalReference": "@statechannels/client-api-schema!~InvalidTransition:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JoinChannelError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JoinChannelParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JoinChannelParams "
            }
          ],
          "releaseTag": "Public",
          "name": "JoinChannelParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JoinChannelParams#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!JoinChannelRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JoinChannelRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'JoinChannel', "
            },
            {
              "kind": "Reference",
              "text": "JoinChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!JoinChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JoinChannelRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!JoinChannelResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JoinChannelResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JoinChannelResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface",
          "docComment": "/**\n * Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonRpcError<Code extends "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", Message, Data = "
            },
            {
              "kind": "Content",
              "text": "undefined"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "Code",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Message",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Data",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "JsonRpcError",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError#code:member",
              "docComment": "/**\n * Error code\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "Code"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError#data:member",
              "docComment": "/**\n * Error data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "Data"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError#message:member",
              "docComment": "/**\n * Error message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "Message"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse:interface",
          "docComment": "/**\n * Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonRpcErrorResponse<Error = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "Error",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "JsonRpcErrorResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse#error:member",
              "docComment": "/**\n * The generic type of the response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "Error"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse#id:member",
              "docComment": "/**\n * Identifier for the response\n *\n * @remarks\n *\n * Matches that of a request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse#jsonrpc:member",
              "docComment": "/**\n * Spec version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsonrpc: "
                },
                {
                  "kind": "Content",
                  "text": "'2.0'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "jsonrpc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface",
          "docComment": "/**\n * Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification}\n *\n * @remarks\n *\n * Note one difference to the JSON-RPC spec is that notifications originate from the wallet (i.e. the Server, not the Client).\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonRpcNotification<NotificationName extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", NotificationParams extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "NotificationName",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "NotificationParams",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "JsonRpcNotification",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification#jsonrpc:member",
              "docComment": "/**\n * Spec version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsonrpc: "
                },
                {
                  "kind": "Content",
                  "text": "'2.0'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "jsonrpc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification#method:member",
              "docComment": "/**\n * Generic type of the Notification name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Content",
                  "text": "NotificationName"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification#params:member",
              "docComment": "/**\n * Generic type of the Notification parameters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params: "
                },
                {
                  "kind": "Content",
                  "text": "NotificationParams"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface",
          "docComment": "/**\n * Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonRpcRequest<MethodName = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", RequestParams = "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "MethodName",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "RequestParams",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "JsonRpcRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest#id:member",
              "docComment": "/**\n * Identifier for the resquest\n *\n * @remarks\n *\n * To be matched in a response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest#jsonrpc:member",
              "docComment": "/**\n * Spec version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsonrpc: "
                },
                {
                  "kind": "Content",
                  "text": "'2.0'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "jsonrpc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest#method:member",
              "docComment": "/**\n * Generic type of the request method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Content",
                  "text": "MethodName"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest#params:member",
              "docComment": "/**\n * Request parameters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params: "
                },
                {
                  "kind": "Content",
                  "text": "RequestParams"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface",
          "docComment": "/**\n * Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JsonRpcResponse<ResponseType = "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "ResponseType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "JsonRpcResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse#id:member",
              "docComment": "/**\n * Identifier for the response\n *\n * @remarks\n *\n * Matches that of a request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse#jsonrpc:member",
              "docComment": "/**\n * Spec version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsonrpc: "
                },
                {
                  "kind": "Content",
                  "text": "'2.0'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "jsonrpc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse#result:member",
              "docComment": "/**\n * The generic type of the response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result: "
                },
                {
                  "kind": "Content",
                  "text": "ResponseType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!Message:interface",
          "docComment": "/**\n * Format of message sent from the wallet to the app\n *\n * @remarks\n *\n * The app relays it to another participant.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Message "
            }
          ],
          "releaseTag": "Public",
          "name": "Message",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Message#data:member",
              "docComment": "/**\n * Message payload. Format defined by wallet and opaque to app.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Message#recipient:member",
              "docComment": "/**\n * Identifier of user that the message should be relayed to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recipient: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "recipient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Message#sender:member",
              "docComment": "/**\n * Identifier of user that the message is from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sender: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!MessageQueuedNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MessageQueuedNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'MessageQueued', "
            },
            {
              "kind": "Reference",
              "text": "Message",
              "canonicalReference": "@statechannels/client-api-schema!Message:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MessageQueuedNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!NotYourTurn:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NotYourTurn = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcError:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorCodes",
              "canonicalReference": "@statechannels/client-api-schema!~ErrorCodes:type"
            },
            {
              "kind": "Content",
              "text": "['NotYourTurn'], 'Not your turn'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NotYourTurn",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!parseErrorResponse:function(1)",
          "docComment": "/**\n * Validates an error response against the API schema & returns the input cast to the correctly narrowed type.\n *\n * @param jsonBlob - A javascript object that might be a valid {@link StateChannelsErrorResponse}\n *\n * @returns The input, but with the correct type, if it is valid.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseErrorResponse(jsonBlob: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsErrorResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsErrorResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "jsonBlob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parseErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!parseNotification:function(1)",
          "docComment": "/**\n * Validates a notification against the API schema & returns the input cast to the correctly narrowed type.\n *\n * @param jsonBlob - A javascript object that might be a valid {@link StateChannelsNotification}\n *\n * @returns The input, but with the correct type, if it is valid.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseNotification(jsonBlob: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsNotification",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "jsonBlob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parseNotification"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!parseRequest:function(1)",
          "docComment": "/**\n * Validates a request against the API schema & returns the input cast to the correctly narrowed type.\n *\n * @param jsonBlob - A javascript object that might be a valid {@link StateChannelsRequest}\n *\n * @returns The input, but with the correct type, if it is valid.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseRequest(jsonBlob: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsRequest",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsRequest:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "jsonBlob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parseRequest"
        },
        {
          "kind": "Function",
          "canonicalReference": "@statechannels/client-api-schema!parseResponse:function(1)",
          "docComment": "/**\n * Validates a response against the API schema & returns the input cast to the correctly narrowed type.\n *\n * @param jsonBlob - A javascript object that might be a valid {@link StateChannelsResponse}\n *\n * @returns The input, but with the correct type, if it is valid.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseResponse(jsonBlob: "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "jsonBlob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "parseResponse"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!Participant:interface",
          "docComment": "/**\n * Container for data specific to a single state channel participant\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Participant "
            }
          ],
          "releaseTag": "Public",
          "name": "Participant",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Participant#destination:member",
              "docComment": "/**\n * Address of EOA to receive channel proceeds (the account that'll get the funds).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destination: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "destination",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Participant#participantId:member",
              "docComment": "/**\n * App allocated id, used for relaying messages to the participant\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "participantId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "participantId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!Participant#signingAddress:member",
              "docComment": "/**\n * Address used to sign channel updates\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "signingAddress: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "signingAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!PushMessageError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushMessageError = "
            },
            {
              "kind": "Reference",
              "text": "NotYourTurn",
              "canonicalReference": "@statechannels/client-api-schema!~NotYourTurn:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushMessageError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!PushMessageParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushMessageParams = "
            },
            {
              "kind": "Reference",
              "text": "PushMessageRequest",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageRequest:type"
            },
            {
              "kind": "Content",
              "text": "['params']"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushMessageParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!PushMessageRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushMessageRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'PushMessage', "
            },
            {
              "kind": "Reference",
              "text": "Message",
              "canonicalReference": "@statechannels/client-api-schema!Message:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushMessageRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!PushMessageResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushMessageResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PushMessageResult",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageResult:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushMessageResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!PushMessageResult:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushMessageResult = "
            },
            {
              "kind": "Content",
              "text": "{\n    success: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushMessageResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsError = "
            },
            {
              "kind": "Reference",
              "text": "EnableEthereumError",
              "canonicalReference": "@statechannels/client-api-schema!EnableEthereumError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseAndWithdrawError",
              "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseChannelError",
              "canonicalReference": "@statechannels/client-api-schema!CloseChannelError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateChannelError",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PushMessageError",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JoinChannelError",
              "canonicalReference": "@statechannels/client-api-schema!JoinChannelError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetStateError",
              "canonicalReference": "@statechannels/client-api-schema!GetStateError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CreateChannelError",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChallengeChannelError",
              "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PushMessageError",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageError:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GenericError",
              "canonicalReference": "@statechannels/client-api-schema!~GenericError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsErrorResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsErrorResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcErrorResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcErrorResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StateChannelsError",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsError:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsErrorResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsJsonRpcMessage:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsJsonRpcMessage = "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsRequest",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsNotification",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsErrorResponse",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsErrorResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsJsonRpcMessage",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsNotification = "
            },
            {
              "kind": "Reference",
              "text": "ChannelProposedNotification",
              "canonicalReference": "@statechannels/client-api-schema!ChannelProposedNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChannelUpdatedNotification",
              "canonicalReference": "@statechannels/client-api-schema!ChannelUpdatedNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChannelClosingNotification",
              "canonicalReference": "@statechannels/client-api-schema!ChannelClosingNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "BudgetUpdatedNotification",
              "canonicalReference": "@statechannels/client-api-schema!BudgetUpdatedNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MessageQueuedNotification",
              "canonicalReference": "@statechannels/client-api-schema!MessageQueuedNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UiNotification",
              "canonicalReference": "@statechannels/client-api-schema!UiNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "WalletReady",
              "canonicalReference": "@statechannels/client-api-schema!WalletReady:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotificationType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsNotificationType = "
            },
            {
              "kind": "Content",
              "text": "{\n    [T in "
            },
            {
              "kind": "Reference",
              "text": "StateChannelsNotification",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type"
            },
            {
              "kind": "Content",
              "text": "['method']]: ["
            },
            {
              "kind": "Reference",
              "text": "FilterByMethod",
              "canonicalReference": "@statechannels/client-api-schema!~FilterByMethod:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StateChannelsNotification",
              "canonicalReference": "@statechannels/client-api-schema!StateChannelsNotification:type"
            },
            {
              "kind": "Content",
              "text": ", T>['params']];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsNotificationType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsRequest = "
            },
            {
              "kind": "Reference",
              "text": "CreateChannelRequest",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JoinChannelRequest",
              "canonicalReference": "@statechannels/client-api-schema!JoinChannelRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateChannelRequest",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetWalletInformationRequest",
              "canonicalReference": "@statechannels/client-api-schema!GetWalletInformationRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "EnableEthereumRequest",
              "canonicalReference": "@statechannels/client-api-schema!EnableEthereumRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetStateRequest",
              "canonicalReference": "@statechannels/client-api-schema!GetStateRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PushMessageRequest",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChallengeChannelRequest",
              "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetBudgetRequest",
              "canonicalReference": "@statechannels/client-api-schema!GetBudgetRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ApproveBudgetAndFundRequest",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseChannelRequest",
              "canonicalReference": "@statechannels/client-api-schema!CloseChannelRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseAndWithdrawRequest",
              "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetChannelsRequest",
              "canonicalReference": "@statechannels/client-api-schema!GetChannelsRequest:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!StateChannelsResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StateChannelsResponse = "
            },
            {
              "kind": "Reference",
              "text": "CreateChannelResponse",
              "canonicalReference": "@statechannels/client-api-schema!CreateChannelResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JoinChannelResponse",
              "canonicalReference": "@statechannels/client-api-schema!JoinChannelResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UpdateChannelResponse",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetWalletInformationResponse",
              "canonicalReference": "@statechannels/client-api-schema!GetWalletInformationResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "EnableEthereumResponse",
              "canonicalReference": "@statechannels/client-api-schema!EnableEthereumResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetStateResponse",
              "canonicalReference": "@statechannels/client-api-schema!GetStateResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PushMessageResponse",
              "canonicalReference": "@statechannels/client-api-schema!PushMessageResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChallengeChannelResponse",
              "canonicalReference": "@statechannels/client-api-schema!ChallengeChannelResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetBudgetResponse",
              "canonicalReference": "@statechannels/client-api-schema!GetBudgetResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseChannelResponse",
              "canonicalReference": "@statechannels/client-api-schema!CloseChannelResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ApproveBudgetAndFundResponse",
              "canonicalReference": "@statechannels/client-api-schema!ApproveBudgetAndFundResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CloseAndWithdrawResponse",
              "canonicalReference": "@statechannels/client-api-schema!CloseAndWithdrawResponse:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GetChannelsResponse",
              "canonicalReference": "@statechannels/client-api-schema!GetChannelsResponse:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StateChannelsResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!TokenBudget:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TokenBudget "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenBudget",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!TokenBudget#availableReceiveCapacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "availableReceiveCapacity: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "availableReceiveCapacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!TokenBudget#availableSendCapacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "availableSendCapacity: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint256",
                  "canonicalReference": "@statechannels/client-api-schema!Uint256:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "availableSendCapacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!TokenBudget#channels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channels: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelBudget",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelBudget:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!TokenBudget#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@statechannels/client-api-schema!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!UiNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UiNotification = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'UIUpdate', {\n    showWallet: boolean;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UiNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!Uint256:type",
          "docComment": "/**\n * Uint256  @pattern ^0x([a-fA-F0-9]{64})$\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Uint256 = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Uint256",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!Uint48:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Uint48 = "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Uint48",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!UpdateChannelError:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UpdateChannelError = "
            },
            {
              "kind": "Reference",
              "text": "ChannelNotFound",
              "canonicalReference": "@statechannels/client-api-schema!ChannelNotFound:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InvalidTransition",
              "canonicalReference": "@statechannels/client-api-schema!InvalidTransition:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InvalidAppData",
              "canonicalReference": "@statechannels/client-api-schema!InvalidAppData:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NotYourTurn",
              "canonicalReference": "@statechannels/client-api-schema!NotYourTurn:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChannelClosed",
              "canonicalReference": "@statechannels/client-api-schema!ChannelClosed:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateChannelError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateChannelParams "
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateChannelParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams#allocations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allocations: "
                },
                {
                  "kind": "Reference",
                  "text": "Allocation",
                  "canonicalReference": "@statechannels/client-api-schema!Allocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allocations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams#channelId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channelId: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelId",
                  "canonicalReference": "@statechannels/client-api-schema!ChannelId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channelId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!UpdateChannelRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UpdateChannelRequest = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcRequest:interface"
            },
            {
              "kind": "Content",
              "text": "<'UpdateChannel', "
            },
            {
              "kind": "Reference",
              "text": "UpdateChannelParams",
              "canonicalReference": "@statechannels/client-api-schema!UpdateChannelParams:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateChannelRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!UpdateChannelResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UpdateChannelResponse = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcResponse",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChannelResult",
              "canonicalReference": "@statechannels/client-api-schema!ChannelResult:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateChannelResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@statechannels/client-api-schema!WalletReady:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WalletReady = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@statechannels/client-api-schema!JsonRpcNotification:interface"
            },
            {
              "kind": "Content",
              "text": "<'WalletReady', {}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WalletReady",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
